server.port=8089
spring.application.name=smartzone-transform
server.servlet.context-path=/retransform
spring.jackson.default-property-inclusion=non_null
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8

### mybatis
#mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.mapper-locations=classpath:com/example/demo/dao/*.xml
mybatis.type-aliases-package=com.example.demo.model
mybatis.configuration.map-underscore-to-camel-case=true
# defaultFetchSize 为驱动的结果集获取数量（fetchSize）设置一个建议值。此参数只可以在查询设置中被覆盖。
mybatis.configuration.default-fetch-size=1
mybatis.configuration.default-statement-timeout=30

### encrypt salt
jasypt.encryptor.password=Y6M9fAJQdU7jNp5MW

### datasource
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/smartzone?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=Asia/Shanghai
spring.datasource.username=ENC(bI49ou62TB7lAmqVj+6HLg==)
# userName :root  password :root
spring.datasource.password=ENC(+zQcABDNbHs2W7QAEp3T1Q==)
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


### datasource-pool
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.maximum-pool-size=30
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.pool-name=HikariCP
spring.datasource.hikari.max-lifetime=900000
spring.datasource.hikari.connection-timeout=10000
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.validation-timeout=1000

### oss
oss.access-key=MZXZO510B8DEY7DP69CR
oss.secret-key=jOujOrgYCkODQy3RPN4v92mJ3C9VFFmapNObcPYh
oss.end-point=oss5.komect.com
oss.bucket-name=aihouseDev


#### rocketmq  集群配置：172.21.39.66:9876;172.21.39.44:9876
rocketmq.name-server=172.21.39.66:9876
rocketmq.producer.group=producer
rocketmq.producer.send-message-timeout=3000


### rocketmq stream
spring.cloud.stream.rocketmq.binder.name-server=172.21.39.66:9876

# order produce
spring.cloud.stream.bindings.order-output.destination=order-topic
spring.cloud.stream.bindings.order-output.content-type=application/json

spring.cloud.stream.rocketmq.bindings.order-output.producer.group=order-producer-group
spring.cloud.stream.rocketmq.bindings.order-output.producer.sync=true

# order consume
spring.cloud.stream.bindings.order-input.destination=order-topic
spring.cloud.stream.bindings.order-input.content-type=application/json

spring.cloud.stream.bindings.order-input.group=order-consumer-group
spring.cloud.stream.bindings.order-input.consumer.max-attempts=1

spring.cloud.stream.rocketmq.bindings.order-input.consumer.delay-level-when-next-consume=0
spring.cloud.stream.rocketmq.bindings.order-input.consumer.orderly=true


### actuator
management.endpoints.web.exposure.include=*
management.endpoint.health.enabled=true
management.endpoint.health.show-details=ALWAYS
management.metrics.tags.application=${spring.application.name}


### security
spring.security.user.name=user
spring.security.user.password=user
spring.security.user.roles=ADMIN

### redis
spring.redis.host=172.21.39.18
spring.redis.lettuce.pool.min-idle=5
spring.redis.port=6379
spring.redis.password=redis@#$


###


### file upload config
# 上传文件大小配置：下面是springboot 2.x 版本的springboot配置
# (1) springboot框架默认配置大小限制
# (2) springboot内置的tomcat默认配置大小限制
# (3) nginx 默认配置大小限制zookeeper path can not be null
# file 文件上传大小限制调整  默认配置类在 MultipartProperties.java ，springboot框架默认为大小1M 和 请求体 10M
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=200MB
# springboot 内置tomcat 的的文件大小限制 ，在ServerProperties.java 配置类中，内置tomcat post请求和所有请求大小默认是2M,配置类中的属性maxHttpFormPostSize 和maxSwallowSize
# 一般上传文件是post请求,所以只要配置max-http-form-post-size即可，如果不想区分是post请求还是get请求，就直接配置max-swallow-size ，下面是直接配置max-swallow-size
server.tomcat.max-swallow-size=-1
#server.tomcat.max-http-form-post-size=-1

