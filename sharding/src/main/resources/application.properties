server.port=8091
spring.application.name=sharding
server.servlet.context-path=/sharding
spring.jackson.default-property-inclusion=non_null
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8

### mybatis
mybatis.mapper-locations=classpath:com/example/sharding/sqlmap/*.xml
mybatis.type-aliases-package=com.example.sharding.model
mybatis.configuration.map-underscore-to-camel-case=true
# defaultFetchSize 为驱动的结果集获取数量（fetchSize）设置一个建议值。此参数只可以在查询设置中被覆盖。
mybatis.configuration.default-fetch-size=1
mybatis.configuration.default-statement-timeout=30

### encrypt salt
jasypt.encryptor.password=Y6M9fAJQdU7jNp5MW

### sharding-jdbc
spring.shardingsphere.datasource.names=master
# 数据源
spring.shardingsphere.datasource.master.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.master.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.master.jdbc-url=jdbc:mysql://127.0.0.1:3306/smartzone?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=Asia/Shanghai
# username:root password:root
spring.shardingsphere.datasource.master.username=ENC(l4Htl/OOj8KpiWWutVHCiQ==)
spring.shardingsphere.datasource.master.password=ENC(D0gTGRtdlLLBM35OTAgFsw==)
spring.shardingsphere.datasource.master.minimum-idle=100
spring.shardingsphere.datasource.master.maximum-pool-size=100

# 分表配置
spring.shardingsphere.sharding.tables.face.actual-data-nodes=master.face_${0..9}
# 自定义分表算法
spring.shardingsphere.sharding.tables.face.table-strategy.standard.sharding-column=uuid
spring.shardingsphere.sharding.tables.face.table-strategy.standard.precise-algorithm-class-name=com.example.sharding.algorithm.ShardingAlgorithm

spring.shardingsphere.sharding.tables.access_record.actual-data-nodes=master.access_record_${0..9}
spring.shardingsphere.sharding.tables.access_record.table-strategy.standard.sharding-column=uuid
spring.shardingsphere.sharding.tables.access_record.table-strategy.standard.precise-algorithm-class-name=com.example.sharding.algorithm.ShardingAlgorithm

spring.shardingsphere.sharding.tables.vehicle_record.actual-data-nodes=master.vehicle_record_${0..9}
spring.shardingsphere.sharding.tables.vehicle_record.table-strategy.standard.sharding-column=uuid
spring.shardingsphere.sharding.tables.vehicle_record.table-strategy.standard.precise-algorithm-class-name=com.example.sharding.algorithm.ShardingAlgorithm

spring.shardingsphere.sharding.tables.log.actual-data-nodes=master.log_${0..9}
spring.shardingsphere.sharding.tables.log.table-strategy.standard.sharding-column=uuid
spring.shardingsphere.sharding.tables.log.table-strategy.standard.precise-algorithm-class-name=com.example.sharding.algorithm.ShardingAlgorithm

spring.shardingsphere.sharding.tables.sys.actual-data-nodes=master.sys_${0..4}
spring.shardingsphere.sharding.tables.sys.table-strategy.standard.sharding-column=uuid
spring.shardingsphere.sharding.tables.sys.table-strategy.standard.precise-algorithm-class-name=com.example.sharding.algorithm.ShardingAlgorithm

# print actual sql
spring.shardingsphere.props.sql.show=true

### oss
oss.access-key=MXZMFJ8F132EJBLAYF5G
oss.secret-key=KdCuvtomjTrnTbgaCqHPvEAGHmTlohMjXc5BVfyr
oss.end-point=oss6.komect.com